<div class="header add-header">
    <p class="small-header-label">New Balance</p>
    <p class="header-number" id="new-balance">{{balance}}</p>
</div>

<div class="main-container">
    <p class="input-value input-value-green" id="add-value">0.00</p>

    <div id="numpad">
        {{> numbad }}
    </div>

    <button id="add-button">Charge</button>

    <form action="/card/">
        <button id="add-cancel-button">Cancel</button>
    </form>

    <form id="add-form" action="/card/add/complete" method="post">
        <label for="add-money">Charge</label>
        <input id="add-money" name="newBalance" type="text">
    </form>
</div>


<script>

    const newBalance = document.querySelector('#new-balance')
    const addValue = document.querySelector('#add-value')
    const addInput = document.querySelector('#add-money')
    const addButton = document.querySelector('#add-button')
    const addForm = document.querySelector('#add-form')
    const numpad = document.querySelector('#numpad')

    const startingBalance = parseInt(newBalance.innerHTML)
    let currentInput = 0

    function formatString (string) {
        return string.toString().slice(0, -2).padStart(1, '0')
                + '.' + string.toString().slice(-2).padStart(2, '0')
    }

    async function animateButtonTap (element) {
        element.classList.add('numpad-button-animated')
        setTimeout( () => {
            element.classList.remove('numpad-button-animated')
        }, 100)
    }

    async function updateView (clickedElement) {
        await animateButtonTap(clickedElement)
        addValue.innerHTML = formatString(currentInput)
        newBalance.innerHTML = formatString(startingBalance + currentInput)
    }

    function handleInput (e) {
        if (e.target !== numpad) {
            const value = e.target.innerText
            currentInput = parseInt(currentInput)
            switch (value) {
                case '00':
                    currentInput *= 100
                    break
                case '<':
                    if (currentInput < 10) {
                        currentInput = 0
                    } else {
                        let temp = currentInput.toString()
                        temp = temp.slice(0, -1)
                        currentInput = parseInt(temp)
                    }
                    break
                default:
                    currentInput = currentInput * 10 + parseInt(value)
            }
            updateView(e.target)
        }
    }

    function submitForm () {
        addInput.value = startingBalance + currentInput
        addForm.submit()
    }

    // Format initial balance
    newBalance.innerHTML = formatString(startingBalance)

    numpad.addEventListener('click', handleInput)
    addButton.addEventListener('click', submitForm)

</script>

