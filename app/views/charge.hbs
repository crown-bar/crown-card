<div class="header charge-header">
    <div class="header-number-wrapper">
        <p class="small-header-label">New Balance</p>
        <p class="header-number" id="new-balance">{{balance}}</p>
    </div>
    <div class="header-number-wrapper">
        <p class="small-header-label">To Pay</p>
        <p class="header-number" id="to-pay">0.00</p>
    </div>
</div>

<div class="main-container">
    <p class="input-value" id="charge-value">0.00</p>

    <div id="numpad">
        {{> numbad }}
    </div>

    <button id="charge-button">Charge</button>

    <form action="/card/">
        <button id="charge-cancel-button">Cancel</button>
    </form>
</div>

<form id="charge-form" action="/card/charge/complete" method="post">
    <label for="charge">Charge</label>
    <input id="charge" name="newBalance" type="text">
</form>

<script>

    const newBalance = document.querySelector('#new-balance')
    const toPay = document.querySelector('#to-pay')
    const chargeValue = document.querySelector('#charge-value')
    const chargeInput = document.querySelector('#charge')
    const chargeButton = document.querySelector('#charge-button')
    const chargeForm = document.querySelector('#charge-form')
    const numpad = document.querySelector('#numpad')

    const startingBalance = newBalance.innerHTML
    let currentInput = 0

    function formatString (string) {
        return 'CHF ' + string.toString().slice(0, -2).padStart(1, '0')
        + '.' + string.toString().slice(-2).padStart(2, '0')
    }

    async function animateButtonTap (element) {
        element.classList.add('numpad-button-animated')
        setTimeout( () => {
            element.classList.remove('numpad-button-animated')
        }, 100)
    }

    async function updateView (clickedElement) {
        await animateButtonTap(clickedElement)
        chargeValue.innerHTML = formatString(currentInput)
        if (currentInput > startingBalance) {
            newBalance.innerHTML = 'CHF 0.00'
            toPay.innerHTML = formatString((startingBalance - currentInput) * -1).toString()
        } else {
            newBalance.innerHTML = formatString((startingBalance - currentInput))
            toPay.innerHTML = 'CHF 0.00'
        }
    }

    function handleInput (e) {
        if (e.target !== numpad) {
            const value = e.target.innerText
            currentInput = parseInt(currentInput)
            switch (value) {
                case '00':
                    currentInput *= 100
                    break
                case '<':
                    if (currentInput < 10) {
                        currentInput = 0
                    } else {
                        let temp = currentInput.toString()
                        temp = temp.slice(0, -1)
                        currentInput = parseInt(temp)
                    }
                    break
                default:
                    currentInput = currentInput * 10 + parseInt(value)
            }
            updateView(e.target)
        }
    }

    function submitForm () {
        if (currentInput <= startingBalance) {
            chargeInput.value = startingBalance - currentInput
        } else {
            chargeInput.value = 0
        }
        chargeForm.submit()
    }


    // Format inital balance
    newBalance.innerHTML = formatString(startingBalance)
    toPay.innerHTML = 'CHF 0.00'

    numpad.addEventListener('click', handleInput)
    chargeButton.addEventListener('click', submitForm)

</script>
